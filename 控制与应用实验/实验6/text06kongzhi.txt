
#include <reg52.h>
#include "intrins.h"
#define uchar unsigned char
#define uint unsigned int
#define ulong unsigned long

sbit P11 = 0x91;
sbit P12 = 0x92;
sbit hot = 0x93;//P13
sbit ds = 0x94;//P14
sbit hot_key = 0xB6;//P3.6
data uchar flag;
data uchar dispram[3];    //ÏÔÊ¾ÊıÎ»

void display()			//LEDÏÔÊ¾³ÌĞò
{
	data uchar led_dis[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};//0--9
	data uchar led_dis1[] = {0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};//Ğ¡ÊıµãÎ»ÖÃ
	data uchar i = 0;
	data uchar temp = 0x80;
	data uchar dis[3];
	P12 = 0;
	
	dis[0] = led_dis[dispram[0]];
	dis[1] = led_dis1[dispram[1]];
	dis[2] = led_dis[dispram[2]];

	for(i=0;i<8;i++)
	{
		if(dis[0]&temp)
			P11 = 1;
		else
			P11 = 0;
		P12 = 1;		
		P12 = 0;		
		temp=temp>>1;
	}
    temp = 0x80;
	for(i=0;i<8;i++)
	{
		if(dis[1]&temp)
			P11 = 1;
		else
			P11 = 0;
		P12 = 1;		
		P12 = 0;		
		temp=temp>>1;
	}
    temp = 0x80;
	for(i=0;i<8;i++)
	{
		if(dis[2]&temp)
			P11 = 1;
		else
			P11 = 0;
		P12 = 1;	
		P12 = 0;
		temp=temp>>1;
	}
}		
// ÑÓÊ±³ÌĞò
/*
void delay1(uint  count )	   //ÑÓÊ±
{
	unsigned char i;
	for(i=0;i<count;i++)
	for (i=0;i<10;i++)//10 * 10us=100us
	{
		_nop_();//1us
		_nop_();
		_nop_();
		_nop_();
		_nop_();
		_nop_();
		_nop_();
		_nop_();
		_nop_();
		_nop_();
	}
}
*/
void TempDelay(uchar us)
{
	while(us--);//6us-8us
}
void delay(uint count)//Dealy
{
	uint i;
	while(count)
	{
		i = 200;
		while(i>1)
			i--;
		count--;
	}
}


void ds_reset(void)
{
	ds=1;
	_nop_();        //1us
	ds=0;
	TempDelay(80);  //µ±×ÜÏßÍ£ÁôÔÚµÍµçÆ½³¬¹ı500us£¬×ÜÏßÉÏËùÒÔÆ÷¼ş¶¼½«±»¸´Î»
	_nop_(); 
	ds=1;           //²úÉú¸´Î»Âö³åºó£¬Î¢´¦ÀíÆ÷ÊÍ·Å×ÜÏß,ÈÃ×ÜÏß´¦ÓÚ¿ÕÏĞ×´Ì¬
	TempDelay(5);   //ÊÍ·Å×ÜÏßºó£¬ÒÔ±ã´Ó»ú18b20Í¨¹ıÀ­µÍ×ÜÏßÀ´Ö¸Ê¾ÆäÊÇ·ñÔÚÏß,´æÔÚ¼ì²â¸ßµçÆ½Ê±¼ä£º15~60us
	_nop_();
	_nop_();
	_nop_();
	if(ds==0)
        flag=1;       //³É¹¦½ÓÊÕĞÅºÅ
	else
        flag=0;       //½ÓÊÜĞÅºÅÊ§°Ü
	TempDelay(20);    //´æÔÚ¼ì²âµÍµçÆ½Ê±¼ä£º60~240us£¬ËùÒÔÑÓÊ±Ô¼140us
	_nop_();
	_nop_();
	ds=1;        	  //ÔÙ´ÎÀ­¸ß×ÜÏß£¬ÈÃ×ÜÏß´¦ÓÚ¿ÕÏĞ×´Ì¬
}


uchar ds_read_byte(void ) //¶ÁÒ»×Ö½Ú
{
	uchar value,i,j;
	value=0;           //ÉèÖÃ³õÖµ
	for(i=0;i<8;i++)
	{
		bit dat;
		ds=0;				//½«×ÜÏßÀ­µÍ
		_nop_();			//¶ÁÊ±Ï¶ÆğÊ¼ÓÚÎ¢´¦ÀíÆ÷½«×ÜÏßÀ­µÍÖÁÉÙ1us
		ds=1;				//P14,À­µÍºóÊÍ·Å×ÜÏß£¬Êä³öÓĞĞ§Êı¾İ
		_nop_();
		_nop_();			//¶ÁÈ¡18b20ÉÏµÄÊı¾İ ,15usÄÚÓĞĞ§
		dat=ds;				//¶ÁÈ¡Êı¾İ,15usÄÚÓĞĞ§ 
		TempDelay(10);	   	//All¶Á"Ê±¼äÏ¶"±60~10us
		j=dat;
		value=(j<<7)|(value>>1);  //´Ó¸ßÎ»µ½µÍÎ»ÒÀ´Î¶Á³ö
	}
	return(value);        //·µ»ØÒ»¸ö×Ö½ÚµÄÊı¾İ
}
void ds_write_byte(uchar dat) //Ğ´Ò»¸ö×Ö½Ú,parameter
{
	uchar i;
	bit onebit;        
	for(i=1;i<=8;i++) 
	{
		onebit=dat&0x01;  ///&&0x01
		dat=dat>>1;			//ÓÒÒÆÒ»Î»
		if(onebit)			//Ğ´ 1
		{
			ds=0;			//À­µÍP14
			_nop_();    
			_nop_();		//ÑÓÊ±1us,Ğ´Ê±¼äÏ¶
			ds=1;			//Ğ´Ê±¼äÏ¶¿ªÊ¼ºóµÄ15¦ÌsÄÚÔÊĞíÊı¾İÏßÀ­µ½¸ßµçÆ½
			TempDelay(5);	//ËùÓĞĞ´Ê±¼äÏ¶±ØĞë×îÉÙ³ÖĞø60us
		}
		else				//Ğ´ 0
		{
			ds=0;
			TempDelay(8);   //Ò»¸öĞ´0 Ê±¼äÏ¶£¬±ØĞë°ÑÊı¾İÏßÀ­µ½µÍµçÆ½²¢±£³ÖÖÁÉÙ60¦Ìs
			ds=1;
			_nop_();
			_nop_();
		}
	}
}


void get_temperature()//get temperature Data
{
	data uint temp;
	float wendu;
	uchar a,b;
	ds_reset();
	delay(1);				//Ô¼2ms
	ds_write_byte(0xcc);//Skip ROM
	ds_write_byte(0xbe);//read sratchpad
	a=ds_read_byte();		// Low byte
	b=ds_read_byte();		// High byte
	temp=b;
	temp<<=8;
	temp=temp|a;
	wendu=temp*0.0625;     //µÃµ½ÕæÊµÊ®½øÖÆÎÂ¶ÈÖµ£¬¾«È·µ½0.0625¶È
	temp=wendu*10+0.5;     //·Å´óÊ®±¶,½øĞĞÒ»¸öËÄÉáÎåÈë²Ù×÷,×îµÍÎ»Ğ¡Êı
	dispram[0] = (uchar) (temp % 10);   
   temp /= 10;   
   dispram[1] = (uchar) (temp % 10);
   temp /=10;   
   dispram[2] = (uchar) (temp % 10);  	
}
void main()
{
						//´®¿Ú³õÊ¼»¯£¬²¨ÌØÂÊ9600£¬·½Ê½1 
   TMOD=0x20;      //ÉèÖÃ¶¨Ê±Æ÷1ÎªÄ£Ê½2
   TH1=0xfd;       //×°³õÖµÉè¶¨²¨ÌØÂÊ
   TL1=0xfd;
   TR1=1;          //Æô¶¯¶¨Ê±Æ÷
   SM0=0;          //SM1 SM0´®¿ÚÍ¨ĞÅÄ£Ê½ÉèÖÃ
   SM1=1;
   PCON=0;         //²¨ÌØÂÊ²»±¶Æµ
	while(1)
	{
	//hot_key = 0;
	   //P0 = hot_key;     
	 //  hot = ~hot_key;   //P13=0xB6,P3.6
	// hot = hot_key;   //P13=0xB6,P3.6
	 //hot = hot_key;
    hot = ~hot_key;
		ds_reset(); 
   	delay(1);				
	   ds_write_byte(0xcc);	// Skip ROM,0xCCH
	   ds_write_byte(0x44);	// Convert Temperature,0x44H
		get_temperature();   //Get Temperature DATA
		display();				//display temperature
	///	TempDelay(1000);
   }
}